TMA,Version,4,,,,,,,,,,
.,,,,,,,,,,,,
Key,Level1,Level2,Level3,ARL-SKT,LNL-SKT,CMT,GRT,Locate-with,Count Domain,Metric Description,Metric Group,Threshold
FE,Frontend_Bound,,,TOPDOWN_FE_BOUND.ALL / #SLOTS,TOPDOWN_FE_BOUND.ALL / #SLOTS,TOPDOWN_FE_BOUND.ALL_P / #SLOTS,TOPDOWN_FE_BOUND.ALL / #SLOTS,,Slots,Counts the number of issue slots that were not consumed by the backend due to frontend stalls.,,>0.20
FE,,IFetch_Latency,,TOPDOWN_FE_BOUND.FRONTEND_LATENCY / #SLOTS,TOPDOWN_FE_BOUND.FRONTEND_LATENCY / #SLOTS,TOPDOWN_FE_BOUND.FRONTEND_LATENCY / #SLOTS,TOPDOWN_FE_BOUND.FRONTEND_LATENCY / #SLOTS,,Slots,"Counts the number of issue slots that were not delivered by the frontend due to frontend latency restrictions due to icache misses, itlb misses, branch detection, and resteer limitations.",,>0.15 & P
FE,,,ICache_Misses,TOPDOWN_FE_BOUND.ICACHE / #SLOTS,TOPDOWN_FE_BOUND.ICACHE / #SLOTS,TOPDOWN_FE_BOUND.ICACHE / #SLOTS,TOPDOWN_FE_BOUND.ICACHE / #SLOTS,,Slots,Counts the number of issue slots that were not delivered by the frontend due to instruction cache misses.,,>0.05 & P
FE,,,ITLB_Misses,TOPDOWN_FE_BOUND.ITLB_MISS / #SLOTS,TOPDOWN_FE_BOUND.ITLB_MISS / #SLOTS,TOPDOWN_FE_BOUND.ITLB_MISS / #SLOTS,TOPDOWN_FE_BOUND.ITLB / #SLOTS,,Slots,Counts the number of issue slots that were not delivered by the frontend due to Instruction Table Lookaside Buffer (ITLB) misses.,,>0.05 & P
FE,,,Branch_Detect,TOPDOWN_FE_BOUND.BRANCH_DETECT / #SLOTS,TOPDOWN_FE_BOUND.BRANCH_DETECT / #SLOTS,TOPDOWN_FE_BOUND.BRANCH_DETECT / #SLOTS,TOPDOWN_FE_BOUND.BRANCH_DETECT / #SLOTS,,Slots,"Counts the number of issue slots that were not delivered by the frontend due to BACLEARS, which occurs when the Branch Target Buffer (BTB) prediction or lack thereof, was corrected by a later branch predictor in the frontend. Includes BACLEARS due to all branch types including conditional and unconditional jumps, returns, and indirect branches.",,>0.05 & P
FE,,,Branch_Resteer,TOPDOWN_FE_BOUND.BRANCH_RESTEER / #SLOTS,TOPDOWN_FE_BOUND.BRANCH_RESTEER / #SLOTS,TOPDOWN_FE_BOUND.BRANCH_RESTEER / #SLOTS,TOPDOWN_FE_BOUND.BRANCH_RESTEER / #SLOTS,,Slots,"Counts the number of issue slots that were not delivered by the frontend due to BTCLEARS, which occurs when the Branch Target Buffer (BTB) predicts a taken branch.",,>0.05 & P
FE,,IFetch_Bandwidth,,TOPDOWN_FE_BOUND.FRONTEND_BANDWIDTH / #SLOTS,TOPDOWN_FE_BOUND.FRONTEND_BANDWIDTH / #SLOTS,TOPDOWN_FE_BOUND.FRONTEND_BANDWIDTH / #SLOTS,TOPDOWN_FE_BOUND.FRONTEND_BANDWIDTH / #SLOTS,,Slots,"Counts the number of issue slots that were not delivered by the frontend due to frontend bandwidth restrictions due to decode, predecode, cisc, and other limitations.",,>0.10 & P
FE,,,Cisc,TOPDOWN_FE_BOUND.CISC / #SLOTS,TOPDOWN_FE_BOUND.CISC / #SLOTS,TOPDOWN_FE_BOUND.CISC / #SLOTS,TOPDOWN_FE_BOUND.CISC / #SLOTS,,Slots,Counts the number of issue slots that were not delivered by the frontend due to the microcode sequencer (MS).,,>0.05 & P
FE,,,Decode,TOPDOWN_FE_BOUND.DECODE / #SLOTS,TOPDOWN_FE_BOUND.DECODE / #SLOTS,TOPDOWN_FE_BOUND.DECODE / #SLOTS,TOPDOWN_FE_BOUND.DECODE / #SLOTS,,Slots,Counts the number of issue slots that were not delivered by the frontend due to decode stalls.,,>0.05 & P
FE,,,Predecode,TOPDOWN_FE_BOUND.PREDECODE / #SLOTS,TOPDOWN_FE_BOUND.PREDECODE / #SLOTS,TOPDOWN_FE_BOUND.PREDECODE / #SLOTS,TOPDOWN_FE_BOUND.PREDECODE / #SLOTS,,Slots,Counts the number of issue slots that were not delivered by the frontend due to wrong predecodes.,,>0.05 & P
FE,,,Other_FB,TOPDOWN_FE_BOUND.OTHER / #SLOTS,TOPDOWN_FE_BOUND.OTHER / #SLOTS,TOPDOWN_FE_BOUND.OTHER / #SLOTS,TOPDOWN_FE_BOUND.OTHER / #SLOTS,,Slots,Counts the number of issue slots that were not delivered by the frontend due to other common frontend stalls not categorized.,,>0.05 & P
BAD,Bad_Speculation,,,TOPDOWN_BAD_SPECULATION.ALL_P / #SLOTS,TOPDOWN_BAD_SPECULATION.ALL_P / #SLOTS,TOPDOWN_BAD_SPECULATION.ALL_P / #SLOTS,( #SLOTS - ( TOPDOWN_FE_BOUND.ALL + TOPDOWN_BE_BOUND.ALL + TOPDOWN_RETIRING.ALL ) ) / #SLOTS,,Slots,Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a mispredicted jump or a machine clear. Only issue slots wasted due to fast nukes such as memory ordering nukes are counted. Other nukes are not accounted for. Counts all issue slots blocked during this recovery window including relevant microcode flows and while uops are not yet available in the instruction queue (IQ). Also includes the issue slots that were consumed by the backend but were thrown away because they were younger than the mispredict or machine clear.,,>0.15
BAD,,Branch_Mispredicts,,TOPDOWN_BAD_SPECULATION.MISPREDICT / #SLOTS,TOPDOWN_BAD_SPECULATION.MISPREDICT / #SLOTS,TOPDOWN_BAD_SPECULATION.MISPREDICT / #SLOTS,TOPDOWN_BAD_SPECULATION.MISPREDICT / #SLOTS,,Slots,Counts the number of issue slots that were not consumed by the backend due to branch mispredicts,,>0.05 & P
BAD,,Machine_Clears,,TOPDOWN_BAD_SPECULATION.MACHINE_CLEARS / #SLOTS,TOPDOWN_BAD_SPECULATION.MACHINE_CLEARS / #SLOTS,TOPDOWN_BAD_SPECULATION.MACHINE_CLEARS / #SLOTS,TOPDOWN_BAD_SPECULATION.MACHINE_CLEARS / #SLOTS,,Slots,Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a machine clear (nuke) of any kind including memory ordering and memory disambiguation,,>0.05 & P
BAD,,,Nuke,TOPDOWN_BAD_SPECULATION.NUKE / #SLOTS,TOPDOWN_BAD_SPECULATION.NUKE / #SLOTS,TOPDOWN_BAD_SPECULATION.NUKE / #SLOTS,TOPDOWN_BAD_SPECULATION.NUKE / #SLOTS,,Slots,Counts the number of issue slots that were not consumed by the backend due to a machine clear that requires the use of microcode (slow nuke),,>0.05 & P
BAD,,,Fast_Nuke,TOPDOWN_BAD_SPECULATION.FASTNUKE / #SLOTS,TOPDOWN_BAD_SPECULATION.FASTNUKE / #SLOTS,TOPDOWN_BAD_SPECULATION.FASTNUKE / #SLOTS,TOPDOWN_BAD_SPECULATION.FASTNUKE / #SLOTS,,Slots,"Counts the number of issue slots that were not consumed by the backend due to a machine clear that does not require the use of microcode, classified as a fast nuke, due to memory ordering, memory disambiguation and memory renaming",,>0.05 & P
BE,Backend_Bound,,,TOPDOWN_BE_BOUND.ALL_P / #SLOTS,TOPDOWN_BE_BOUND.ALL_P / #SLOTS,TOPDOWN_BE_BOUND.ALL_P / #SLOTS,TOPDOWN_BE_BOUND.ALL / #SLOTS,,Slots,"Counts the total number of issue slots that were not consumed by the backend due to backend stalls. Note that uops must be available for consumption in order for this event to count. If a uop is not available (IQ is empty), this event will not count",,>0.10
BE,,Core_Bound,,TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS / #SLOTS,TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS / #SLOTS,TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS / #SLOTS,TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS / #SLOTS,,Slots,"Counts the number of cycles due to backend bound stalls that are bounded by core restrictions and not attributed to an outstanding load or stores, or resource limitation",,>0.10 & P
BE,,,Allocation_Restriction,TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS / #SLOTS,TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS / #SLOTS,TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS / #SLOTS,TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS / #SLOTS,,Slots,Counts the number of issue slots that were not consumed by the backend due to certain allocation restrictions,,>0.10 & P
BE,,Resource_Bound,,( ( TOPDOWN_BE_BOUND.ALL_P / #SLOTS ) - Core_Bound ),( ( TOPDOWN_BE_BOUND.ALL_P / #SLOTS ) - Core_Bound ),( ( TOPDOWN_BE_BOUND.ALL_P / #SLOTS ) - Core_Bound ),( ( TOPDOWN_BE_BOUND.ALL / #SLOTS ) - Core_Bound ),,Slots,Counts the number of cycles the core is stalled due to a resource limitation,,>0.20 & P
BE,,,Mem_Scheduler,TOPDOWN_BE_BOUND.MEM_SCHEDULER / #SLOTS,TOPDOWN_BE_BOUND.MEM_SCHEDULER / #SLOTS,TOPDOWN_BE_BOUND.MEM_SCHEDULER / #SLOTS,TOPDOWN_BE_BOUND.MEM_SCHEDULER / #SLOTS,,Slots,Counts the number of issue slots that were not consumed by the backend due to memory reservation stalls in which a scheduler is not able to accept uops,,>0.10 & P
BE,,,Non_Mem_Scheduler,TOPDOWN_BE_BOUND.NON_MEM_SCHEDULER / #SLOTS,TOPDOWN_BE_BOUND.NON_MEM_SCHEDULER / #SLOTS,TOPDOWN_BE_BOUND.NON_MEM_SCHEDULER / #SLOTS,TOPDOWN_BE_BOUND.NON_MEM_SCHEDULER / #SLOTS,,Slots,"Counts the number of issue slots that were not consumed by the backend due to IEC or FPC RAT stalls, which can be due to FIQ or IEC reservation stalls in which the integer, floating point or SIMD scheduler is not able to accept uops",,>0.10 & P
BE,,,Register,TOPDOWN_BE_BOUND.REGISTER / #SLOTS,TOPDOWN_BE_BOUND.REGISTER / #SLOTS,TOPDOWN_BE_BOUND.REGISTER / #SLOTS,TOPDOWN_BE_BOUND.REGISTER / #SLOTS,,Slots,Counts the number of issue slots that were not consumed by the backend due to the physical register file unable to accept an entry (marble stalls),,>0.10 & P
BE,,,Reorder_Buffer,TOPDOWN_BE_BOUND.REORDER_BUFFER / #SLOTS,TOPDOWN_BE_BOUND.REORDER_BUFFER / #SLOTS,TOPDOWN_BE_BOUND.REORDER_BUFFER / #SLOTS,TOPDOWN_BE_BOUND.REORDER_BUFFER / #SLOTS,,Slots,Counts the number of issue slots that were not consumed by the backend due to the reorder buffer being full (ROB stalls),,>0.10 & P
BE,,,Serialization,TOPDOWN_BE_BOUND.SERIALIZATION / #SLOTS,TOPDOWN_BE_BOUND.SERIALIZATION / #SLOTS,TOPDOWN_BE_BOUND.SERIALIZATION / #SLOTS,TOPDOWN_BE_BOUND.SERIALIZATION / #SLOTS,,Slots,"Counts the number of issue slots that were not consumed by the backend due to scoreboards from the instruction queue (IQ), jump execution unit (JEU), or microcode sequencer (MS)",,>0.10 & P
RET,Retiring,,,TOPDOWN_RETIRING.ALL / #SLOTS,TOPDOWN_RETIRING.ALL / #SLOTS,TOPDOWN_RETIRING.ALL_P / #SLOTS,TOPDOWN_RETIRING.ALL / #SLOTS,,Slots,Counts the number of issue slots that result in retirement slots,,>0.75
.,metrics,,,,,,,,,,,
Info.Bottleneck,%_Mem_Exec_Bound_Cycles,,,100 * LD_HEAD.ANY_AT_RET / #CLKS,100 * LD_HEAD.ANY_AT_RET / #CLKS,100 * LD_HEAD.ANY_AT_RET / #CLKS,100 * LD_HEAD.ANY_AT_RET / #CLKS,,Cycles,Percentage of time that retirement is stalled by the Memory Cluster due to a pipeline stall. See Info.Mem_Exec_Bound,Mem_Exec,
Info.Bottleneck,%_Load_Miss_Bound_Cycles,,,100 * MEM_BOUND_STALLS_LOAD.ALL / #CLKS,100 * MEM_BOUND_STALLS_LOAD.ALL / #CLKS,100 * MEM_BOUND_STALLS_LOAD.ALL / #CLKS,100 * MEM_BOUND_STALLS.LOAD / #CLKS,,Cycles,Percentage of time that retirement is stalled due to an L1 miss. See Info.Load_Miss_Bound,Load_Store_Miss,
Info.Bottleneck,%_DTLB_Miss_Bound_Cycles,,,100 * ( LD_HEAD.DTLB_MISS_AT_RET + LD_HEAD.PGWALK_AT_RET ) / #CLKS,100 * ( LD_HEAD.DTLB_MISS_AT_RET + LD_HEAD.PGWALK_AT_RET ) / #CLKS,100 * ( LD_HEAD.DTLB_MISS_AT_RET + LD_HEAD.PGWALK_AT_RET ) / #CLKS,100 * ( LD_HEAD.DTLB_MISS_AT_RET + LD_HEAD.PGWALK_AT_RET ) / #CLKS,,Cycles,Percentage of time that retirement is stalled due to a first level data TLB miss,,
Info.Bottleneck,%_IFetch_Miss_Bound_Cycles,,,100 * MEM_BOUND_STALLS_IFETCH.ALL / #CLKS,100 * MEM_BOUND_STALLS_IFETCH.ALL / #CLKS,100 * MEM_BOUND_STALLS_IFETCH.ALL / #CLKS,100 * MEM_BOUND_STALLS.IFETCH / #CLKS,,Cycles,"Percentage of time that allocation and retirement is stalled by the Frontend Cluster due to an Ifetch Miss, either Icache or ITLB Miss. See Info.Ifetch_Bound",Ifetch,
Info.Core,IPC,,,INST_RETIRED.ANY / #CLKS,INST_RETIRED.ANY / #CLKS,INST_RETIRED.ANY / #CLKS,INST_RETIRED.ANY / #CLKS,,,Instructions Per Cycle,,
Info.Core,CPI,,,#CLKS / INST_RETIRED.ANY,#CLKS / INST_RETIRED.ANY,#CLKS / INST_RETIRED.ANY,#CLKS / INST_RETIRED.ANY,,,Cycles Per Instruction,,
Info.Core,UPI,,,TOPDOWN_RETIRING.ALL / INST_RETIRED.ANY,TOPDOWN_RETIRING.ALL / INST_RETIRED.ANY,TOPDOWN_RETIRING.ALL_P / INST_RETIRED.ANY,UOPS_RETIRED.ALL / INST_RETIRED.ANY,,,Uops Per Instruction,,
Info.Core,FLOPc,,,FP_FLOPS_RETIRED.ALL / #CLKS,FP_FLOPS_RETIRED.ALL / #CLKS,FP_FLOPS_RETIRED.ALL / #CLKS,#NA,,,Floating Point Operations Per Cycle,Flops,
Info.Br_Inst_Mix,IpBranch,,,INST_RETIRED.ANY / BR_INST_RETIRED.ALL_BRANCHES,INST_RETIRED.ANY / BR_INST_RETIRED.ALL_BRANCHES,INST_RETIRED.ANY / BR_INST_RETIRED.ALL_BRANCHES,INST_RETIRED.ANY / BR_INST_RETIRED.ALL_BRANCHES,,,Instructions per Branch (lower number means higher occurrence rate),,
Info.Br_Inst_Mix,IpCall,,,INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_CALL,INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_CALL,INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_CALL,INST_RETIRED.ANY / BR_INST_RETIRED.CALL,,,Instruction per (near) call (lower number means higher occurrence rate),,
Info.Br_Inst_Mix,IpFarBranch,,,INST_RETIRED.ANY / BR_INST_RETIRED.FAR_BRANCH:USER,INST_RETIRED.ANY / BR_INST_RETIRED.FAR_BRANCH:USER,INST_RETIRED.ANY / BR_INST_RETIRED.FAR_BRANCH:USER,INST_RETIRED.ANY / BR_INST_RETIRED.FAR_BRANCH:USER,,,"Instructions per Far Branch ( Far Branches apply upon transition from application to operating system, handling interrupts, exceptions) [lower number means higher occurrence rate]",,
Info.Br_Inst_Mix,IpMispredict,,,INST_RETIRED.ANY / BR_MISP_RETIRED.ALL_BRANCHES,INST_RETIRED.ANY / BR_MISP_RETIRED.ALL_BRANCHES,INST_RETIRED.ANY / BR_MISP_RETIRED.ALL_BRANCHES,INST_RETIRED.ANY / BR_MISP_RETIRED.ALL_BRANCHES,,,Instructions per retired Branch Misprediction,,
Info.Br_Inst_Mix,IpMisp_Cond_Ntaken,,,INST_RETIRED.ANY / ( BR_MISP_RETIRED.COND - BR_MISP_RETIRED.COND_TAKEN ),INST_RETIRED.ANY / ( BR_MISP_RETIRED.COND - BR_MISP_RETIRED.COND_TAKEN ),INST_RETIRED.ANY / ( BR_MISP_RETIRED.COND - BR_MISP_RETIRED.COND_TAKEN ),INST_RETIRED.ANY / ( BR_MISP_RETIRED.COND - BR_MISP_RETIRED.COND_TAKEN ),,,Instructions per retired conditional Branch Misprediction where the branch was not taken,,
Info.Br_Inst_Mix,IpMisp_Cond_Taken,,,INST_RETIRED.ANY / BR_MISP_RETIRED.COND_TAKEN,INST_RETIRED.ANY / BR_MISP_RETIRED.COND_TAKEN,INST_RETIRED.ANY / BR_MISP_RETIRED.COND_TAKEN,INST_RETIRED.ANY / BR_MISP_RETIRED.COND_TAKEN,,,Instructions per retired conditional Branch Misprediction where the branch was taken,,
Info.Br_Inst_Mix,IpMisp_Ret,,,INST_RETIRED.ANY / BR_MISP_RETIRED.RETURN,INST_RETIRED.ANY / BR_MISP_RETIRED.RETURN,INST_RETIRED.ANY / BR_MISP_RETIRED.RETURN,INST_RETIRED.ANY / BR_MISP_RETIRED.RETURN,,,Instructions per retired return Branch Misprediction,,
Info.Br_Inst_Mix,IpMisp_Indirect,,,INST_RETIRED.ANY / BR_MISP_RETIRED.INDIRECT,INST_RETIRED.ANY / BR_MISP_RETIRED.INDIRECT,INST_RETIRED.ANY / BR_MISP_RETIRED.INDIRECT,INST_RETIRED.ANY / BR_MISP_RETIRED.INDIRECT,,,Instructions per retired indirect call or jump Branch Misprediction,,
Info.Arith_Inst_Mix,IpFLOP,,,INST_RETIRED.ANY / FP_FLOPS_RETIRED.ALL,INST_RETIRED.ANY / FP_FLOPS_RETIRED.ALL,INST_RETIRED.ANY / FP_FLOPS_RETIRED.ALL,#NA,,,Instructions per Floating Point (FP) Operation,Flops,
Info.Arith_Inst_Mix,IpFPArith,,,INST_RETIRED.ANY / FP_INST_RETIRED.ALL,INST_RETIRED.ANY / FP_INST_RETIRED.ALL,#NA,#NA,,,Instructions per FP Arithmetic instruction,Flops,
Info.Arith_Inst_Mix,IpFPArith_Scalar_SP,,,INST_RETIRED.ANY / FP_INST_RETIRED.32B_SP,INST_RETIRED.ANY / FP_INST_RETIRED.32B_SP,INST_RETIRED.ANY / FP_INST_RETIRED.32B_SP,#NA,,,Instructions per FP Arithmetic Scalar Single-Precision instruction,Flops,
Info.Arith_Inst_Mix,IpFPArith_Scalar_DP,,,INST_RETIRED.ANY / FP_INST_RETIRED.64B_DP,INST_RETIRED.ANY / FP_INST_RETIRED.64B_DP,INST_RETIRED.ANY / FP_INST_RETIRED.64B_DP,#NA,,,Instructions per FP Arithmetic Scalar Double-Precision instruction,Flops,
Info.Arith_Inst_Mix,IpFPArith_AVX128,,,INST_RETIRED.ANY / ( FP_INST_RETIRED.128B_DP + FP_INST_RETIRED.128B_SP ),INST_RETIRED.ANY / ( FP_INST_RETIRED.128B_DP + FP_INST_RETIRED.128B_SP ),INST_RETIRED.ANY / ( FP_INST_RETIRED.128B_DP + FP_INST_RETIRED.128B_SP ),#NA,,,Instructions per FP Arithmetic AVX/SSE 128-bit instruction,Flops,
Info.Arith_Inst_Mix,IpFPArith_AVX256,,,INST_RETIRED.ANY / ( FP_INST_RETIRED.256B_DP + FP_INST_RETIRED.256B_SP ),INST_RETIRED.ANY / ( FP_INST_RETIRED.256B_DP + FP_INST_RETIRED.256B_SP ),#NA,#NA,,,Instructions per FP Arithmetic AVX 256-bit instruction,Flops,
Info.Uop_Mix,Microcode_Uop_Ratio,,,100 * UOPS_RETIRED.MS / TOPDOWN_RETIRING.ALL,100 * UOPS_RETIRED.MS / TOPDOWN_RETIRING.ALL,100 * UOPS_RETIRED.MS / TOPDOWN_RETIRING.ALL_P,100 * UOPS_RETIRED.MS / UOPS_RETIRED.ALL,,,Percentage of all uops which are microcode ops,,
Info.Uop_Mix,FPDiv_Uop_Ratio,,,100 * UOPS_RETIRED.FPDIV / TOPDOWN_RETIRING.ALL,100 * UOPS_RETIRED.FPDIV / TOPDOWN_RETIRING.ALL,100 * UOPS_RETIRED.FPDIV / TOPDOWN_RETIRING.ALL_P,100 * UOPS_RETIRED.FPDIV / UOPS_RETIRED.ALL,,,Percentage of all uops which are FPDiv uops,,
Info.Uop_Mix,IDiv_Uop_Ratio,,,100 * UOPS_RETIRED.IDIV / TOPDOWN_RETIRING.ALL,100 * UOPS_RETIRED.IDIV / TOPDOWN_RETIRING.ALL,100 * UOPS_RETIRED.IDIV / TOPDOWN_RETIRING.ALL_P,100 * UOPS_RETIRED.IDIV / UOPS_RETIRED.ALL,,,Percentage of all uops which are IDiv uops,,
Info.Uop_Mix,X87_Uop_Ratio,,,100 * UOPS_RETIRED.X87 / TOPDOWN_RETIRING.ALL,100 * UOPS_RETIRED.X87 / TOPDOWN_RETIRING.ALL,100 * UOPS_RETIRED.X87 / TOPDOWN_RETIRING.ALL_P,100 * UOPS_RETIRED.X87 / UOPS_RETIRED.ALL,,,Percentage of all uops which are x87 uops,,
Info.Mem_Mix,IpLoad,,,INST_RETIRED.ANY / MEM_UOPS_RETIRED.ALL_LOADS,INST_RETIRED.ANY / MEM_UOPS_RETIRED.ALL_LOADS,INST_RETIRED.ANY / MEM_UOPS_RETIRED.ALL_LOADS,INST_RETIRED.ANY / MEM_UOPS_RETIRED.ALL_LOADS,,,Instructions per Load,,
Info.Mem_Mix,IpStore,,,INST_RETIRED.ANY / MEM_UOPS_RETIRED.ALL_STORES,INST_RETIRED.ANY / MEM_UOPS_RETIRED.ALL_STORES,INST_RETIRED.ANY / MEM_UOPS_RETIRED.ALL_STORES,INST_RETIRED.ANY / MEM_UOPS_RETIRED.ALL_STORES,,,Instructions per Store,,
Info.Mem_Mix,MemLoad_Ratio,,,1000 * MEM_UOPS_RETIRED.ALL_LOADS / TOPDOWN_RETIRING.ALL,1000 * MEM_UOPS_RETIRED.ALL_LOADS / TOPDOWN_RETIRING.ALL,1000 * MEM_UOPS_RETIRED.ALL_LOADS / TOPDOWN_RETIRING.ALL_P,1000 * MEM_UOPS_RETIRED.ALL_LOADS / UOPS_RETIRED.ALL,,,Ratio of mem load uops to all uops,,
Info.Mem_Mix,Load_Splits_Ratio,,,100 * MEM_UOPS_RETIRED.SPLIT_LOADS / MEM_UOPS_RETIRED.ALL_LOADS,100 * MEM_UOPS_RETIRED.SPLIT_LOADS / MEM_UOPS_RETIRED.ALL_LOADS,100 * MEM_UOPS_RETIRED.SPLIT_LOADS / MEM_UOPS_RETIRED.ALL_LOADS,100 * MEM_UOPS_RETIRED.SPLIT_LOADS / MEM_UOPS_RETIRED.ALL_LOADS,,,Percentage of total non-speculative loads that are splits,,
Info.Mem_Mix,Load_Locks_Ratio,,,100 * MEM_UOPS_RETIRED.LOCK_LOADS / MEM_UOPS_RETIRED.ALL_LOADS,100 * MEM_UOPS_RETIRED.LOCK_LOADS / MEM_UOPS_RETIRED.ALL_LOADS,100 * MEM_UOPS_RETIRED.LOCK_LOADS / MEM_UOPS_RETIRED.ALL_LOADS,100 * MEM_UOPS_RETIRED.LOCK_LOADS / MEM_UOPS_RETIRED.ALL_LOADS,,,Percentage of total non-speculative loads that perform one or more locks,,
Info.Mem_Exec_Blocks,%_Loads_with_StoreFwdBlk,,,100 * LD_BLOCKS.DATA_UNKNOWN / MEM_UOPS_RETIRED.ALL_LOADS,100 * LD_BLOCKS.DATA_UNKNOWN / MEM_UOPS_RETIRED.ALL_LOADS,100 * LD_BLOCKS.DATA_UNKNOWN / MEM_UOPS_RETIRED.ALL_LOADS,100 * LD_BLOCKS.DATA_UNKNOWN / MEM_UOPS_RETIRED.ALL_LOADS,,,Percentage of total non-speculative loads with a store forward or unknown store address block,,
Info.Mem_Exec_Blocks,%_Loads_with_AdressAliasing,,,100 * LD_BLOCKS.ADDRESS_ALIAS / MEM_UOPS_RETIRED.ALL_LOADS,100 * LD_BLOCKS.ADDRESS_ALIAS / MEM_UOPS_RETIRED.ALL_LOADS,100 * LD_BLOCKS.ADDRESS_ALIAS / MEM_UOPS_RETIRED.ALL_LOADS,100 * LD_BLOCKS.4K_ALIAS / MEM_UOPS_RETIRED.ALL_LOADS,,,Percentage of total non-speculative loads with an address aliasing block,,
Info.Mem_Exec_Bound,%_LoadHead_with_STLBHit,,,100 * LD_HEAD.DTLB_MISS_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.DTLB_MISS_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.DTLB_MISS_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.DTLB_MISS_AT_RET / LD_HEAD.ANY_AT_RET,,,Percentage of Memory Execution Bound due to a second level TLB miss,,
Info.Mem_Exec_Bound,%_LoadHead_with_Pagewalk,,,100 * LD_HEAD.PGWALK_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.PGWALK_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.PGWALK_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.PGWALK_AT_RET / LD_HEAD.ANY_AT_RET,,,Percentage of Memory Execution Bound due to a pagewalk,,
Info.Mem_Exec_Bound,%_LoadHead_with_StoreFwding,,,100 * LD_HEAD.ST_ADDR_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.ST_ADDR_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.ST_ADDR_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.ST_ADDR_AT_RET / LD_HEAD.ANY_AT_RET,,,Percentage of Memory Execution Bound due to a store forward address match,,
Info.Mem_Exec_Bound,%_LoadHead_with_OtherPipelineBlks,,,100 * LD_HEAD.OTHER_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.OTHER_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.OTHER_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.OTHER_AT_RET / LD_HEAD.ANY_AT_RET,,,"Percentage of Memory Execution Bound due to other block cases, such as pipeline conflicts, fences, etc",,
Info.Mem_Exec_Bound,%_LoadHead_with_L1miss,,,100 * LD_HEAD.L1_MISS_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.L1_MISS_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.L1_MISS_AT_RET / LD_HEAD.ANY_AT_RET,100 * LD_HEAD.L1_MISS_AT_RET / LD_HEAD.ANY_AT_RET,,,Percentage of Memory Execution Bound due to a first level data cache miss,,
Info.Load_Store_Bound,Store_Bound,,,100 * ( MEM_SCHEDULER_BLOCK.ST_BUF / MEM_SCHEDULER_BLOCK.ALL ) * ( TOPDOWN_BE_BOUND.MEM_SCHEDULER / #SLOTS ),100 * ( MEM_SCHEDULER_BLOCK.ST_BUF / MEM_SCHEDULER_BLOCK.ALL ) * ( TOPDOWN_BE_BOUND.MEM_SCHEDULER / #SLOTS ),100 * ( MEM_SCHEDULER_BLOCK.ST_BUF / MEM_SCHEDULER_BLOCK.ALL ) * ( TOPDOWN_BE_BOUND.MEM_SCHEDULER / #SLOTS ),100 * ( MEM_SCHEDULER_BLOCK.ST_BUF / MEM_SCHEDULER_BLOCK.ALL ) * ( TOPDOWN_BE_BOUND.MEM_SCHEDULER / #SLOTS ),,,Counts the number of cycles the core is stalled due to store buffer full,load_store_bound,
Info.Load_Store_Bound,Load_Bound,,,100 * ( LD_HEAD.L1_BOUND_AT_RET + MEM_BOUND_STALLS_LOAD.ALL ) / #CLKS,100 * ( LD_HEAD.L1_BOUND_AT_RET + MEM_BOUND_STALLS_LOAD.ALL ) / #CLKS,100 * ( LD_HEAD.L1_BOUND_AT_RET + MEM_BOUND_STALLS_LOAD.ALL ) / #CLKS,100 * ( LD_HEAD.L1_BOUND_AT_RET + MEM_BOUND_STALLS.LOAD ) / #CLKS,,,Counts the number of cycles that the oldest load of the load buffer is stalled at retirement,load_store_bound,
Info.Load_Store_Bound,L1_Bound,,,100 * LD_HEAD.L1_BOUND_AT_RET / #CLKS,100 * LD_HEAD.L1_BOUND_AT_RET / #CLKS,100 * LD_HEAD.L1_BOUND_AT_RET / #CLKS,100 * LD_HEAD.L1_BOUND_AT_RET / #CLKS,,,Counts the number of cycles that the oldest load of the load buffer is stalled at retirement due to a pipeline block,load_store_bound,
Info.Load_Miss_Bound,%_LoadMissBound_with_L2Hit,,,100 * MEM_BOUND_STALLS_LOAD.L2_HIT / MEM_BOUND_STALLS_LOAD.ALL,100 * MEM_BOUND_STALLS_LOAD.L2_HIT / MEM_BOUND_STALLS_LOAD.ALL,100 * MEM_BOUND_STALLS_LOAD.L2_HIT / MEM_BOUND_STALLS_LOAD.ALL,100 * MEM_BOUND_STALLS.LOAD_L2_HIT / MEM_BOUND_STALLS.LOAD,,,Percentage of memory bound stalls where retirement is stalled due to an L1 miss that hit the L2,load_store_bound,
Info.Load_Miss_Bound,%_LoadMissBound_with_L2Miss,,,100 * MEM_BOUND_STALLS_LOAD.L2_MISS / MEM_BOUND_STALLS_LOAD.ALL,100 * MEM_BOUND_STALLS_LOAD.L2_MISS / MEM_BOUND_STALLS_LOAD.ALL,100 * ( MEM_BOUND_STALLS_LOAD.LLC_HIT + MEM_BOUND_STALLS_LOAD.LLC_MISS ) / MEM_BOUND_STALLS_LOAD.ALL,100 * ( MEM_BOUND_STALLS.LOAD_LLC_HIT + MEM_BOUND_STALLS.LOAD_DRAM_HIT ) / MEM_BOUND_STALLS.LOAD,,,Percentage of memory bound stalls where retirement is stalled due to an L1 miss that subsequently misses in the L2,load_store_bound,
Info.Load_Miss_Bound,%_LoadMissBound_with_L3Hit,,,100 * MEM_BOUND_STALLS_LOAD.LLC_HIT / MEM_BOUND_STALLS_LOAD.ALL,#NA,100 * MEM_BOUND_STALLS_LOAD.LLC_HIT / MEM_BOUND_STALLS_LOAD.ALL,100 * MEM_BOUND_STALLS.LOAD_LLC_HIT / MEM_BOUND_STALLS.LOAD,,,Percentage of memory bound stalls where retirement is stalled due to an L1 miss that hit the L3,load_store_bound,
Info.Load_Miss_Bound,%_LoadMissBound_with_L3Miss,,,100 * ( MEM_BOUND_STALLS_LOAD.L2_MISS - MEM_BOUND_STALLS_LOAD.LLC_HIT ) / MEM_BOUND_STALLS_LOAD.ALL,#NA,100 * MEM_BOUND_STALLS_LOAD.LLC_MISS / MEM_BOUND_STALLS_LOAD.ALL,100 * MEM_BOUND_STALLS.LOAD_DRAM_HIT / MEM_BOUND_STALLS.LOAD,,,Percentage of memory bound stalls where retirement is stalled due to an L1 miss that subsequently misses the L3,load_store_bound,
Info.Ifetch_Miss_Bound,%_IfetchMissBound_with_L2Hit,,,100 * MEM_BOUND_STALLS_IFETCH.L2_HIT / MEM_BOUND_STALLS_IFETCH.ALL,100 * MEM_BOUND_STALLS_IFETCH.L2_HIT / MEM_BOUND_STALLS_IFETCH.ALL,100 * MEM_BOUND_STALLS_IFETCH.L2_HIT / MEM_BOUND_STALLS_IFETCH.ALL,100 * MEM_BOUND_STALLS.IFETCH_L2_HIT / MEM_BOUND_STALLS.IFETCH,,,"Percentage of ifetch miss bound stalls, where the ifetch miss hits in the L2",,
Info.Ifetch_Miss_Bound,%_IfetchMissBound_with_L2Miss,,,100 * MEM_BOUND_STALLS_IFETCH.L2_MISS / MEM_BOUND_STALLS_IFETCH.ALL,100 * MEM_BOUND_STALLS_IFETCH.L2_MISS / MEM_BOUND_STALLS_IFETCH.ALL,100 * ( MEM_BOUND_STALLS_IFETCH.LLC_HIT + MEM_BOUND_STALLS_IFETCH.LLC_MISS ) / MEM_BOUND_STALLS_IFETCH.ALL,100 * ( MEM_BOUND_STALLS.IFETCH_LLC_HIT + MEM_BOUND_STALLS.IFETCH_DRAM_HIT ) / MEM_BOUND_STALLS.IFETCH,,,"Percentage of ifetch miss bound stalls, where the ifetch miss doesn't hit in the L2",,
Info.Ifetch_Miss_Bound,%_IfetchMissBound_with_L3Hit,,,100 * MEM_BOUND_STALLS_IFETCH.LLC_HIT / MEM_BOUND_STALLS_IFETCH.ALL,#NA,100 * MEM_BOUND_STALLS_IFETCH.LLC_HIT / MEM_BOUND_STALLS_IFETCH.ALL,100 * MEM_BOUND_STALLS.IFETCH_LLC_HIT / MEM_BOUND_STALLS.IFETCH,,,"Percentage of ifetch miss bound stalls, where the ifetch miss hits in the L3",,
Info.Ifetch_Miss_Bound,%_IfetchMissBound_with_L3Miss,,,100 * ( MEM_BOUND_STALLS_IFETCH.L2_MISS - MEM_BOUND_STALLS_IFETCH.LLC_HIT ) / MEM_BOUND_STALLS_IFETCH.ALL,#NA,100 * MEM_BOUND_STALLS_IFETCH.LLC_MISS / MEM_BOUND_STALLS_IFETCH.ALL,100 * MEM_BOUND_STALLS.IFETCH_DRAM_HIT / MEM_BOUND_STALLS.IFETCH,,,"Percentage of ifetch miss bound stalls, where the ifetch miss subsequently misses in the L3",,
Info.Br_Mispredict_Bound,Branch_Mispredict_Ratio,,,BR_MISP_RETIRED.ALL_BRANCHES / BR_INST_RETIRED.ALL_BRANCHES,BR_MISP_RETIRED.ALL_BRANCHES / BR_INST_RETIRED.ALL_BRANCHES,BR_MISP_RETIRED.ALL_BRANCHES / BR_INST_RETIRED.ALL_BRANCHES,BR_MISP_RETIRED.ALL_BRANCHES / BR_INST_RETIRED.ALL_BRANCHES,,,Ratio of all branches which mispredict,,
Info.Br_Mispredict_Bound,Branch_Mispredict_to_Unknown_Branch_Ratio,,,BR_MISP_RETIRED.ALL_BRANCHES / BACLEARS.ANY,BR_MISP_RETIRED.ALL_BRANCHES / BACLEARS.ANY,BR_MISP_RETIRED.ALL_BRANCHES / BACLEARS.ANY,BR_MISP_RETIRED.ALL_BRANCHES / BACLEARS.ANY,,,Ratio between Mispredicted branches and unknown branches,,
Info.Machine_Clear_Bound,Machine_Clears_Disamb_PKI,,,1000 * MACHINE_CLEARS.DISAMBIGUATION / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.DISAMBIGUATION / INST_RETIRED.ANY,#NA,1000 * MACHINE_CLEARS.DISAMBIGUATION / INST_RETIRED.ANY,,,"Counts the number of machine clears relative to thousands of instructions retired, due to memory disambiguation",,
Info.Machine_Clear_Bound,Machine_Clears_FP_Assist_PKI,,,1000 * MACHINE_CLEARS.FP_ASSIST / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.FP_ASSIST / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.FP_ASSIST / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.FP_ASSIST / INST_RETIRED.ANY,,,"Counts the number of machine clears relative to thousands of instructions retired, due to floating point assists",,
Info.Machine_Clear_Bound,Machine_Clears_Monuke_PKI,,,1000 * MACHINE_CLEARS.MEMORY_ORDERING / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.MEMORY_ORDERING / INST_RETIRED.ANY,#NA,1000 * MACHINE_CLEARS.MEMORY_ORDERING / INST_RETIRED.ANY,,,"Counts the number of machine clears relative to thousands of instructions retired, due to memory ordering",,
Info.Machine_Clear_Bound,Machine_Clears_Page_Fault_PKI,,,1000 * MACHINE_CLEARS.PAGE_FAULT / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.PAGE_FAULT / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.PAGE_FAULT / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.PAGE_FAULT / INST_RETIRED.ANY,,,"Counts the number of machine clears relative to thousands of instructions retired, due to page faults",,
Info.Machine_Clear_Bound,Machine_Clears_MRN_PKI,,,1000* MACHINE_CLEARS.MRN_NUKE / INST_RETIRED.ANY,1000* MACHINE_CLEARS.MRN_NUKE / INST_RETIRED.ANY,#NA,1000* MACHINE_CLEARS.MRN_NUKE / INST_RETIRED.ANY,,,"Counts the number of machine clears relative to thousands of instructions retired, due to memory renaming",,
Info.Machine_Clear_Bound,Machine_Clears_SMC_PKI,,,#NA,#NA,1000 * MACHINE_CLEARS.SMC / INST_RETIRED.ANY,1000 * MACHINE_CLEARS.SMC / INST_RETIRED.ANY,,,"Counts the number of machine clears relative to thousands of instructions retired, due to self-modifying code",,
Info.Buffer_Stalls,%_Store_Buffer_Stall_Cycles,,,100 * MEM_SCHEDULER_BLOCK.ST_BUF / #CLKS,100 * MEM_SCHEDULER_BLOCK.ST_BUF / #CLKS,100 * MEM_SCHEDULER_BLOCK.ST_BUF / #CLKS,100 * MEM_SCHEDULER_BLOCK.ST_BUF / #CLKS,,,Percentage of time that allocation is stalled due to store buffer full,,
Info.Buffer_Stalls,%_Load_Buffer_Stall_Cycles,,,100 * MEM_SCHEDULER_BLOCK.LD_BUF / #CLKS,100 * MEM_SCHEDULER_BLOCK.LD_BUF / #CLKS,100 * MEM_SCHEDULER_BLOCK.LD_BUF / #CLKS,100 * MEM_SCHEDULER_BLOCK.LD_BUF / #CLKS,,,Percentage of time that allocation is stalled due to load buffer full,,
Info.Buffer_Stalls,%_Mem_RSV_Stall_Cycles,,,100 * MEM_SCHEDULER_BLOCK.RSV / #CLKS,100 * MEM_SCHEDULER_BLOCK.RSV / #CLKS,100 * MEM_SCHEDULER_BLOCK.RSV / #CLKS,100 * MEM_SCHEDULER_BLOCK.RSV / #CLKS,,,Percentage of time that allocation is stalled due to memory reservation stations full,,
Info.Serialization ,%_Tpause_Cycles,,,100 * SERIALIZATION.C01_MS_SCB / #SLOTS,100 * SERIALIZATION.C01_MS_SCB / #SLOTS,100 * SERIALIZATION.C01_MS_SCB / #SLOTS,100 * SERIALIZATION.C01_MS_SCB / #SLOTS,,,Percentage of time that the core is stalled due to a TPAUSE or UMWAIT instruction ,,
Info.System,Turbo_Utilization,,,#CLKS / CPU_CLK_UNHALTED.REF_TSC,#CLKS / CPU_CLK_UNHALTED.REF_TSC,#CLKS / CPU_CLK_UNHALTED.REF_TSC,#CLKS / CPU_CLK_UNHALTED.REF_TSC,,,Average Frequency Utilization relative nominal frequency,,
Info.System,Kernel_Utilization,,,CPU_CLK_UNHALTED.CORE_P:sup / #CLKS,CPU_CLK_UNHALTED.CORE_P:sup / #CLKS,CPU_CLK_UNHALTED.CORE_P:sup / #CLKS,CPU_CLK_UNHALTED.CORE_P:sup / #CLKS,,,Fraction of cycles spent in Kernel mode,,
Info.System,CPU_Utilization,,,CPU_CLK_UNHALTED.REF_TSC / TSC,CPU_CLK_UNHALTED.REF_TSC / TSC,CPU_CLK_UNHALTED.REF_TSC / TSC,CPU_CLK_UNHALTED.REF_TSC / TSC,,,Average CPU Utilization,,
Info.System,MUX,,,#CLKS_P / #CLKS,#CLKS_P / #CLKS,#CLKS_P / #CLKS,#CLKS_P / #CLKS,,,PerfMon Event Multiplexing accuracy indicator,,( > 1.1 | < 0.9 )
Info.System,GFLOPs,,,FP_FLOPS_RETIRED.ALL / ( #DurationTimeInSeconds * 1000000000 ),FP_FLOPS_RETIRED.ALL / ( #DurationTimeInSeconds * 1000000000 ),FP_FLOPS_RETIRED.ALL / ( #DurationTimeInSeconds * 1000000000 ),#NA,,,"Giga Floating Point Operations Per Second. Aggregate across all supported options of: FP precisions, scalar and vector instructions, vector-width",Flops,
.,,,,,,,,,,,,
Aux,#CLKS,,,CPU_CLK_UNHALTED.CORE,CPU_CLK_UNHALTED.CORE,CPU_CLK_UNHALTED.CORE,CPU_CLK_UNHALTED.CORE,,Cycles,,,
Aux,#CLKS_P,,,CPU_CLK_UNHALTED.CORE_P,CPU_CLK_UNHALTED.CORE_P,CPU_CLK_UNHALTED.CORE_P,CPU_CLK_UNHALTED.CORE_P,,Cycles,,,
Aux,#SLOTS,,,#Pipeline_Width * #CLKS,#Pipeline_Width * #CLKS,#Pipeline_Width * #CLKS,#Pipeline_Width * #CLKS,,Cycles,,,
Aux,#Pipeline_Width,,,8,8,6,5,,Constant,pipeline allocation width,,
Aux,#DurationTimeInSeconds,,,DurationTimeInMilliSeconds / 1000,DurationTimeInMilliSeconds / 1000,DurationTimeInMilliSeconds / 1000,DurationTimeInMilliSeconds / 1000,,Count,,,
Aux,DurationTimeInMilliSeconds,,,,,,,,SystemParameter,The duration time in milliseconds of the profile,,
